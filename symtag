#!/bin/bash

# This program is free software. It comes without any warranty, to the extent
# permitted by applicable law. You can redistribute it and/or modify it under
# the terms of the Do What The Fuck You Want To Public License, Version 2, as
# published by Sam Hocevar. See WTFPL.txt or http://www.wtfpl.net/ for more
# details.

shopt -s expand_aliases
alias fail='{ echo $LINENO; exit 1; }'
alias unpath="sed 's#^.*/##g'"


function main {
  mkdir -p "${SYMTAGDIR}/"{tags,names,hashes} || fail

  add_files
  add_tags
  query
  output_names
}


function add_files {
  for FILE in "${FILES[@]}"; do 
    HASH=not_found
    for HASH_LINK in "${SYMTAGDIR}/hashes/"*; do
      test "$(cd "${SYMTAGDIR}/hashes"; readlink -e "$(readlink "${HASH_LINK}" || fail)")" == "$(readlink -e "${FILE}" || fail)" && {
        HASH="$(echo "${HASH_LINK}" | unpath)"
      }
    done
    test 'not_found' == "${HASH}" && {
      HASH="$(
        sha256sum "${FILE}" | {
          read HASH PATH
          echo $HASH
        }
      )" || fail
    }
    NAME=$(echo "${FILE}" | unpath) || fail
    NAMES+=("${NAME}")
    link_hash_to_file
    link_name_to_hash
  done
}


function link_hash_to_file {
  test -e "${SYMTAGDIR}/hashes/${HASH}" || {
    test -h "${SYMTAGDIR}/hashes/${HASH}" && {
      rm "${SYMTAGDIR}/hashes/${HASH}" || fail
    }
    ln -s "$(realpath --relative-to "${SYMTAGDIR}/hashes/" "${FILE}" || fail )" "${SYMTAGDIR}/hashes/${HASH}" || fail
  }
}


function link_name_to_hash {
  HASH_PATH="$(readlink "${SYMTAGDIR}/names/${NAME}")"
  HASH_ABS_PATH="$(cd "${SYMTAGDIR}/hashes"; readlink -e "${HASH_PATH}" || fail)"

  echo "${HASH_ABS_PATH}" |
    grep -q "^$(readlink -e "${SYMTAGDIR}/hashes/" || fail)" || 
  {
    rm "${SYMTAGDIR}/names/${NAME}" || fail
  }

  test -e "${SYMTAGDIR}/names/${NAME}" || {
    test -h "${SYMTAGDIR}/names/${NAME}" && {
      rm "${SYMTAGDIR}/names/${NAME}" || fail
    }
    ln -s "../hashes/${HASH}" "${SYMTAGDIR}/names/${NAME}" || fail
  }
}


function link_tag_to_hash {
  mkdir -p "${SYMTAGDIR}/tags/${TAG}" || fail
  test -h "${SYMTAGDIR}/tags/${TAG}/${HASH}" && {
    rm "${SYMTAGDIR}/tags/${TAG}/${HASH}" || fail
  }
  ln -s "../../hashes/${HASH}" "${SYMTAGDIR}/tags/${TAG}/${HASH}" || fail
}


function add_tags {
  for NAME in "${NAMES[@]}"; do
    HASH="$(readlink "${SYMTAGDIR}/names/${NAME}" | unpath)" || fail
    for TAG in "${TAGS[@]}"; do
      link_tag_to_hash
    done
  done
}


function boolean_or {
  RESULTS+=("${TAGGED_FILES[@]}")
}


function boolean_and {
  NEW_RESULTS=()
  for RESULT in "${RESULTS[@]}"; do
    for TAGGED_FILE in "${TAGGED_FILES[@]}"; do
      if test "${RESULT}" == "${TAGGED_FILE}"; then
        NEW_RESULTS+=("${RESULT}")
      fi
    done
  done
  RESULTS=( "${NEW_RESULTS[@]}" )
}


function boolean_not {
  NEW_RESULTS=()
  for RESULT in "${RESULTS[@]}"; do
    MATCH=no
    for TAGGED_FILE in "${TAGGED_FILES[@]}"; do
      if test "${RESULT}" == "${TAGGED_FILE}"; then
        MATCH=yes
      fi
    done
    if test "${MATCH}" == no; then
      NEW_RESULTS+=( "${RESULT}" )
    fi
  done
  RESULTS=( "${NEW_RESULTS[@]}" )
}


function output_names {

  NULLGLOB=$(shopt nullglob | { read x y && echo $y; })
  shopt -s nullglob || fail
  ALL_NAMES=( "${SYMTAGDIR}/names/"* )
  test 'off' == "${NULLGLOB}" && {
    shopt -u nullglob || fail
  }

  i=0
  while test "${i}" -lt "${#ALL_NAMES[@]}"; do
    ALL_NAMES["${i}"]="$( echo "${ALL_NAMES[$i]}" | unpath )"
    i=$(( "${i}" + 1 ))
  done

  for RESULT in "${RESULTS[@]}"; do
    for NAME in "${ALL_NAMES[@]}"; do
      HASH="$(readlink "${SYMTAGDIR}/names/${NAME}" | unpath)"
      if test "${HASH}" == "${RESULT}"; then
        case "${OUTPUT}" in
          hash)
            echo "${HASH}"
            ;;
          file)
            readlink "${SYMTAGDIR}/hashes/${HASH}"
            ;;
          link)
            echo "${SYMTAGDIR}/names/${NAME}"
            ;;
          name)
            echo "${NAME}"
            ;;
          *)
            echo -n "${HASH}:  "
            readlink "${SYMTAGDIR}/hashes/${HASH}"
        esac
      fi
    done
  done
}


function query {
  for ELEMENT in $QUERY; do
    case "${ELEMENT}" in
      AND|OR|NOT)
        MODE="${ELEMENT}"
        continue
        ;;
      *)
        TAGGED_FILES=( $(test -d "${SYMTAGDIR}/tags/${ELEMENT}/" && ls "${SYMTAGDIR}/tags/${ELEMENT}/") )
        case "${MODE}" in
          OR)
            boolean_or
            ;;
          AND)
            boolean_and
            ;;
          NOT)
            boolean_not
            ;;
          *)
            fail
            ;;
        esac
        ;;
    esac
  done
}


SYMTAGRC=~/.symtagrc
SYMTAGDIR=~/.symtag
OUTPUT=default

TARGETS=()
TAGS=()
NAMES=()
RESULTS=()

MODE=OR

while test $# -gt 0; do
  case "${1}" in
    -c|--config|--rc)
      SYMTAGRC="${2}"
      shift
      ;;
    -n|--name)
      NAMES+=("${2}")
      ;;
    -t|--tag)
      TAGS+=("${2}")
      shift
      ;;
    -q|--query)
      QUERY="${2}"
      shift
      ;;
    -o|--output)
      O_OUTPUT="${2}"
      shift
      ;;
    -*)
      fail
      ;;
    *)
      test -e "${FILE}" &&
        FILES+=( "$(echo "${1}")")
      true
      ;;
  esac
  shift
done

test -f "${SYMTAGRC}" && {
  . "${SYMTAGRC}" || fail
}

! test '' == "${O_OUTPUT}" &&
  OUTPUT="${O_OUTPUT}"

main
